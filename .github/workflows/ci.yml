name: CI - Build Angular + .NET

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Manual dispatch to run deploy step with a target (TBD)
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target identifier (e.g. azure-webapp, s3, etc.)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout repository (including submodules)
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'
          include-prerelease: true

      - name: Debug workspace before frontend install
        run: |
          echo "PWD: $(pwd)"
          echo "Listing root files:" && ls -la
          echo "Listing FrontOfTheHouse/ files:" && ls -la FrontOfTheHouse || true

      - name: Install frontend deps
        working-directory: FrontOfTheHouse
        run: npm ci

      - name: Build frontend (production)
        working-directory: FrontOfTheHouse
        run: npm run build

      - name: Copy frontend build into wwwroot
        run: |
          mkdir -p wwwroot
          # prefer browser output if SSR build exists
          if [ -d "FrontOfTheHouse/dist/sandwichUi/browser" ]; then
            cp -R FrontOfTheHouse/dist/sandwichUi/browser/* wwwroot/
          else
            cp -R FrontOfTheHouse/dist/sandwichUi/* wwwroot/
          fi

      - name: Restore .NET packages
        run: dotnet restore BackOfTheHouse.csproj

      - name: Build and publish .NET
        run: dotnet publish BackOfTheHouse.csproj -c Release -o out/publish

      - name: Upload publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: backofthehouse-publish
          path: out/publish

  deploy:
    name: Deploy (placeholder)
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main' }}
    defaults:
      run:
        working-directory: ./

    env:
      DEPLOY_TARGET: ${{ github.event.inputs.deploy_target || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: backofthehouse-publish

      - name: Deploy placeholder - validate target
        run: |
          echo "Deployment target: $DEPLOY_TARGET"
          if [ -z "$DEPLOY_TARGET" ]; then
            echo "No DEPLOY_TARGET provided. This is a placeholder deploy job. Set the deploy_target input when triggering workflow_dispatch or add a secret/variable to choose a target.";
            echo "Example targets: 'azure-webapp', 'aws-ecs', 's3', 'gcp-cloud-run'";
            exit 1
          fi
          # TODO: replace the following placeholder with actual deploy steps for the target (Azure/AWS/GCP/etc.)
          echo "Would deploy to: $DEPLOY_TARGET"

